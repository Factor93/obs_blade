name: Build and release FOSS version

on:
  push:
    branches: [foss]
    paths-ignore:
      - '**/README.md'

  # Allows you to run this workflow manually from the Actions tab
  # ONLY POSSIBLE IF IN *DEFAULT* BRANCH AS SET IN REPO
  workflow_dispatch:

jobs:
  build-release-foss:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: foss
          submodules: recursive
      - name: Set release version
        run: |
          VER=$(cat pubspec.yaml | grep -o "version:[^:]*" | cut -f 2 -d ":" | cut -f 1 -d "+" | xargs)
          echo "APP_VERSION=$VER" >> $GITHUB_ENV
      # - name: Get Flutter SDK
      #   uses: subosito/flutter-action@v2
      #   with:
      #     channel: stable
      # - name: Get pubspec dependencies
      #   run: flutter pub get
      # - name: Build APK
      #   run: flutter build apk
      #--------------------------------------------------------
      # Make use of the pinned flutter version via gt submodule
      # to ensure we are using a working flutter version for
      # this app / release
      #--------------------------------------------------------
      - name: Flutter doctor
        run: ./flutterw doctor
      - name: Get pubspec dependencies
        run: ./flutterw pub get
      - name: Build APK
        run: ./flutterw build apk
      - name: Rename APK
        run: mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/obs-blade-${{ env.APP_VERSION }}.apk
      - name: Create GitHub release and upload APK
        uses: softprops/action-gh-release@v1
        with:
          tag_name: foss-${{ env.APP_VERSION }}
          target_commitish: foss
          files: build/app/outputs/flutter-apk/obs-blade-${{ env.APP_VERSION }}.apk
